 # Full configuration options can be found at https://www.nomadproject.io/docs/configuration

data_dir  = "/opt/nomad/data"
bind_addr = "{{ network.ip }}"

datacenter = "{{ nomad.datacenter }}"

server {
  # license_path is required as of Nomad v1.1.1+
  #license_path = "/opt/nomad/license.hclic"
  enabled          = true
  bootstrap_expect = 1
  job_gc_interval = "1h"
  job_gc_threshold = "72h"
}

ui {
  enabled = true

  consul {
    ui_url = "https://consul.pbnet.dk/ui"
  }
}

telemetry {
  collection_interval = "1s"
  disable_hostname = true
  prometheus_metrics = true
  publish_allocation_metrics = true
  publish_node_metrics = true 
}

plugin "docker" {  
  config {
    allow_caps = [
      "audit_write",
      "chown",
      "dac_override",
      "fowner",
      "fsetid",
      "kill",
      "mknod",
      "net_bind_service",
      "net_raw",
      "net_admin",
      "setfcap",
      "setgid",
      "setpcap",
      "setuid",
      "sys_chroot"
    ]

    extra_labels = ["job_name", "task_group_name", "task_name", "namespace", "node_name"]

    gc {
      image = true
      image_delay = "72h"
    }
    volumes {
      enabled = true
    }
  }
}

client {
  enabled = true
  servers = ["{{ network.ip }}"]

  // Only do GC every 3 days
  gc_interval = "72h"

  // Each client can have a max of 50 dead allocations, before they are cleaned up.
  gc_max_allocs = "50"

  host_volume "docker-socket" {
    path = "/var/run/docker.sock"
    read_only = true
  }
  
  host_volume "birth" {
    path      = "/export/volumes/nomad/birth"
    read_only = false
  }
  
  host_volume "dragonfly" {
    path      = "/export/volumes/nomad/dragonfly"
    read_only = false
  }

  host_volume "flexsignal" {
    path      = "/export/volumes/nomad/flexsignal"
    read_only = false
  }

  host_volume "grafana" {
    path      = "/export/volumes/nomad/grafana"
    read_only = false
  }

  host_volume "loki" {
    path      = "/export/volumes/nomad/loki"
    read_only = false
  }

  host_volume "pgdata-api" {
    path      = "/export/volumes/nomad/pgdata/api"
    read_only = false
  }
  
  host_volume "pgdata-event" {
    path      = "/export/volumes/nomad/pgdata/event"
    read_only = false
  }
  
  host_volume "pgdata-nominatim" {
    path      = "/mnt/nas1/volumes/nomad/nominatim"
    read_only = false
  }

  host_volume "pgdata-payment" {
    path      = "/export/volumes/nomad/pgdata/payment"
    read_only = false
  }
  
  host_volume "pgdata-status" {
    path      = "/export/volumes/nomad/pgdata/status"
    read_only = false
  }

  host_volume "pgdata-storage" {
    path      = "/export/volumes/nomad/pgdata/storage"
    read_only = false
  }
  
  host_volume "pgdata-techlog" {
    path      = "/export/volumes/nomad/pgdata/techlog"
    read_only = false
  }

  host_volume "prometheus" {
    path      = "/export/volumes/nomad/prometheus"
    read_only = false
  }

  host_volume "zeek" {
    path      = "/mnt/nas1/volumes/nomad/zeek"
    read_only = false
  }

  options {
        "docker.cleanup.image" = "false"
  }
}
