- name: Get Hashicorp GPG key
  get_url:
    url: https://apt.releases.hashicorp.com/gpg
    dest: /tmp/hashicorp.gpg

- name: Convert GPG key to GPG keyring format
  command: gpg --batch --yes --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg /tmp/hashicorp.gpg

- name: Add Hashicorp Nomad repository
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
    filename: hashicorp

- name: Install Consul & Nomad
  apt:
    state: latest
    pkg: 
    - consul
    - consul-template
    - nomad

- name: Create directories for nomad volumes
  file:
    path: "{{ item.name }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "42775"
  loop:
    - { name: /export/volumes/nomad/dragonfly, owner: root, group: docker }
    - { name: /export/volumes/nomad/grafana, owner: 472, group: docker }
    - { name: /export/volumes/nomad/loki, owner: 10001, group: 10001 }
    - { name: /export/volumes/nomad/pgdata/api, owner: root, group: docker }
    - { name: /export/volumes/nomad/pgdata/event, owner: root, group: docker }
    - { name: /export/volumes/nomad/pgdata/nominatim, owner: root, group: docker }
    - { name: /export/volumes/nomad/pgdata/payment, owner: root, group: docker }
    - { name: /export/volumes/nomad/pgdata/status, owner: root, group: docker }
    - { name: /export/volumes/nomad/pgdata/storage, owner: root, group: docker }
    - { name: /export/volumes/nomad/pgdata/techlog, owner: root, group: docker }
    - { name: /export/volumes/nomad/prometheus, owner: root, group: docker }
    - { name: /mnt/nas1/volumes/nomad/nominatim, owner: root, group: docker }
    - { name: /mnt/nas1/volumes/nomad/zeek, owner: root, group: docker }
    - { name: /export/volumes/nomad/birth, owner: nobody, group: docker }
    - { name: /export/volumes/nomad/flexsignal, owner: nobody, group: docker }

- name: Create consul directories
  file:
    path: "/etc/consul.d/{{ item.name }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "0775"
  loop:
    - { name: scripts, owner: consul, group: consul }
    - { name: services, owner: consul, group: consul }
    - { name: templates, owner: consul, group: consul }

- name: Making Consul configuration
  template:
    src: "etc/consul.d/consul.hcl.j2"
    dest: "/etc/consul.d/consul.hcl"
    mode: 0644

- name: Ensure systemd override dir
  file:
    path: /etc/systemd/system/consul.service.d/
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy systemd override file
  copy:
    dest: /etc/systemd/system/consul.service.d/override.conf
    content: |
      [Service]
      # Clear current value, otherwise systemd will yell
      ExecStart=

      # New values
      ExecStart=/usr/bin/consul agent -config-dir=/etc/consul.d/ -config-dir=/etc/consul.d/services/    
    mode: 0644

- name: Copy update-pg-role script
  template:
    src: etc/consul.d/scripts/update-pg-role.sh
    dest: /etc/consul.d/scripts/update-pg-role.sh
    mode: 0755
    owner: consul
    group: consul

- name: Copy pg-master templates
  template:
    src: etc/consul.d/templates/pg-master.tmpl
    dest: /etc/consul.d/templates/pg-master-{{ item.name }}.tmpl
    owner: consul
    group: consul
  vars:
    rand_suffix: "{{ lookup('password', '/dev/null length=15 chars=ascii_lowercase,digits') }}"
  loop: "{{ postgres.clusters }}"

- name: Copy pg-slave templates
  template:
    src: etc/consul.d/templates/pg-slave.tmpl
    dest: /etc/consul.d/templates/pg-slave-{{ item.name }}.tmpl
    owner: consul
    group: consul
  vars:
    rand_suffix: "{{ lookup('password', '/dev/null length=15 chars=ascii_lowercase,digits') }}"
  loop: "{{ postgres.clusters }}"

- name: Making Nomad configuration
  template:
    src: "etc/nomad.d/nomad.hcl.j2"
    dest: "/etc/nomad.d/nomad.hcl"
    mode: 0644

- name: Making Nomad network configuration
  template:
    src: "etc/nomad.d/gateway.hcl.j2"
    dest: "/etc/nomad.d/gateway.hcl"
    mode: 0644

- name: Start Consul service
  systemd_service:
    name: consul
    state: started
    enabled: true
    daemon_reload: true

- name: Start Nomad service
  systemd_service:
    name: nomad
    state: started
    enabled: true

- name: Install Systemd-resolved
  apt:
    state: latest
    pkg: 
    - systemd-resolved

- name: Ensure systemd-resolved config dir
  file:
    path: /etc/systemd/resolved.conf.d
    state: directory

- name: Making systemd-resolved configuration
  copy:
    dest: /etc/systemd/resolved.conf.d/consul.conf
    content: |
      [Resolve]
      DNS=127.0.0.1:8600
      DNSSEC=false
      Domains=node.consul service.consul ~consul
      DNSStubListener=yes
      DNSStubListenerExtra=172.17.0.1


- name: Restart systemd-resolved service
  systemd_service:
    name: systemd-resolved
    state: restarted

- name: Create systemd update-pg-role timer
  copy:
    dest: "/etc/systemd/system/update-pg-role.service"
    content: |
      [Unit]
      Description=Update Postgres role in Consul

      [Service]
      Type=oneshot
      User=consul
      ExecStart=/etc/consul.d/scripts/update-pg-role.sh

- name: Create systemd timer unit
  copy:
    dest: "/etc/systemd/system/update-pg-role.timer"
    content: |
      [Unit]
      Description=Run update-pg-role.sh every minute

      [Timer]
      OnBootSec=1min
      OnUnitActiveSec=1min
      Persistent=true

      [Install]
      WantedBy=timers.target

- name: Enable and start the timer
  systemd:
    name: "update-pg-role.timer"
    enabled: true
    state: started
    daemon_reload: true